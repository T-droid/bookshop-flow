"""implement_new_inventory_schema_corrected

Revision ID: cbdbb578cbfb
Revises: 8261c503b92c
Create Date: 2025-08-13 17:00:17.230089

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'cbdbb578cbfb'
down_revision: Union[str, Sequence[str], None] = '8261c503b92c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('category_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.PrimaryKeyConstraint('category_id')
    )
    op.create_index(op.f('ix_category_name'), 'category', ['name'], unique=False)
    op.create_table('bookedition',
    sa.Column('edition_id', sa.Uuid(), nullable=False),
    sa.Column('book_id', sa.Uuid(), nullable=False),
    sa.Column('isbn_13', sqlmodel.sql.sqltypes.AutoString(length=13), nullable=False),
    sa.Column('isbn_10', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('format', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('edition_number', sa.Integer(), nullable=False),
    sa.Column('publisher', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('publication_date', sa.Date(), nullable=True),
    sa.Column('page_count', sa.Integer(), nullable=True),
    sa.Column('dimensions', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('edition_id')
    )
    op.create_index(op.f('ix_bookedition_created_at'), 'bookedition', ['created_at'], unique=False)
    op.create_index(op.f('ix_bookedition_isbn_10'), 'bookedition', ['isbn_10'], unique=False)
    op.create_index(op.f('ix_bookedition_isbn_13'), 'bookedition', ['isbn_13'], unique=True)
    op.create_index(op.f('ix_bookedition_updated_at'), 'bookedition', ['updated_at'], unique=False)
    op.add_column('book', sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    op.add_column('book', sa.Column('language', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False))
    op.add_column('book', sa.Column('category_id', sa.Uuid(), nullable=True))
    op.alter_column('book', 'author',
               existing_type=sa.VARCHAR(length=100),
               type_=sqlmodel.sql.sqltypes.AutoString(length=255),
               existing_nullable=False)
    op.drop_constraint(op.f('book_publisher_id_key'), 'book', type_='unique')
    op.drop_constraint(op.f('book_tenant_id_key'), 'book', type_='unique')
    op.drop_index(op.f('ix_book_isbn'), table_name='book')
    op.drop_index(op.f('ix_book_title'), table_name='book')
    op.create_index(op.f('ix_book_title'), 'book', ['title'], unique=False)
    op.drop_constraint(op.f('book_publisher_id_fkey'), 'book', type_='foreignkey')
    op.drop_constraint(op.f('book_tenant_id_fkey'), 'book', type_='foreignkey')
    op.create_foreign_key(None, 'book', 'category', ['category_id'], ['category_id'])
    op.drop_column('book', 'tenant_id')
    op.drop_column('book', 'publisher_id')
    op.drop_column('book', 'isbn')
    op.drop_column('book', 'price')
    op.add_column('inventory', sa.Column('inventory_id', sa.Uuid(), nullable=False))
    op.add_column('inventory', sa.Column('edition_id', sa.Uuid(), nullable=False))
    op.add_column('inventory', sa.Column('quantity_on_hand', sa.Integer(), nullable=False))
    op.add_column('inventory', sa.Column('quantity_reserved', sa.Integer(), nullable=False))
    op.add_column('inventory', sa.Column('reorder_level', sa.Integer(), nullable=False))
    op.add_column('inventory', sa.Column('cost_price', sa.Numeric(scale=2), nullable=False))
    op.add_column('inventory', sa.Column('sale_price', sa.Numeric(scale=2), nullable=False))
    op.add_column('inventory', sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True))
    op.add_column('inventory', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('inventory', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.create_index(op.f('ix_inventory_created_at'), 'inventory', ['created_at'], unique=False)
    op.create_index(op.f('ix_inventory_updated_at'), 'inventory', ['updated_at'], unique=False)
    op.drop_constraint(op.f('inventory_book_id_fkey'), 'inventory', type_='foreignkey')
    op.drop_constraint(op.f('inventory_tenant_id_fkey'), 'inventory', type_='foreignkey')
    op.create_foreign_key(None, 'inventory', 'tenant', ['tenant_id'], ['id'])
    op.create_foreign_key(None, 'inventory', 'bookedition', ['edition_id'], ['edition_id'])
    op.drop_column('inventory', 'quantity')
    op.drop_column('inventory', 'low_stock_threshold')
    op.drop_column('inventory', 'book_id')
    op.add_column('purchaseorder', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('purchaseorder', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.create_index(op.f('ix_purchaseorder_created_at'), 'purchaseorder', ['created_at'], unique=False)
    op.create_index(op.f('ix_purchaseorder_updated_at'), 'purchaseorder', ['updated_at'], unique=False)
    op.drop_constraint(op.f('purchaseorder_tenant_id_fkey'), 'purchaseorder', type_='foreignkey')
    op.create_foreign_key(None, 'purchaseorder', 'tenant', ['tenant_id'], ['id'])
    op.alter_column('supplier', 'name',
               existing_type=sa.VARCHAR(length=100),
               type_=sqlmodel.sql.sqltypes.AutoString(length=255),
               existing_nullable=False)
    op.alter_column('supplier', 'contact_info',
               existing_type=sa.VARCHAR(length=255),
               type_=sqlmodel.sql.sqltypes.AutoString(length=500),
               existing_nullable=True)
    op.drop_index(op.f('ix_supplier_name'), table_name='supplier')
    op.create_index(op.f('ix_supplier_name'), 'supplier', ['name'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_supplier_name'), table_name='supplier')
    op.create_index(op.f('ix_supplier_name'), 'supplier', ['name'], unique=True)
    op.alter_column('supplier', 'contact_info',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=500),
               type_=sa.VARCHAR(length=255),
               existing_nullable=True)
    op.alter_column('supplier', 'name',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_constraint(None, 'purchaseorder', type_='foreignkey')
    op.create_foreign_key(op.f('purchaseorder_tenant_id_fkey'), 'purchaseorder', 'tenant', ['tenant_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_purchaseorder_updated_at'), table_name='purchaseorder')
    op.drop_index(op.f('ix_purchaseorder_created_at'), table_name='purchaseorder')
    op.drop_column('purchaseorder', 'updated_at')
    op.drop_column('purchaseorder', 'created_at')
    op.add_column('inventory', sa.Column('book_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('inventory', sa.Column('low_stock_threshold', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('inventory', sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'inventory', type_='foreignkey')
    op.drop_constraint(None, 'inventory', type_='foreignkey')
    op.create_foreign_key(op.f('inventory_tenant_id_fkey'), 'inventory', 'tenant', ['tenant_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('inventory_book_id_fkey'), 'inventory', 'book', ['book_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_inventory_updated_at'), table_name='inventory')
    op.drop_index(op.f('ix_inventory_created_at'), table_name='inventory')
    op.drop_column('inventory', 'updated_at')
    op.drop_column('inventory', 'created_at')
    op.drop_column('inventory', 'location')
    op.drop_column('inventory', 'sale_price')
    op.drop_column('inventory', 'cost_price')
    op.drop_column('inventory', 'reorder_level')
    op.drop_column('inventory', 'quantity_reserved')
    op.drop_column('inventory', 'quantity_on_hand')
    op.drop_column('inventory', 'edition_id')
    op.drop_column('inventory', 'inventory_id')
    op.add_column('book', sa.Column('price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('book', sa.Column('isbn', sa.VARCHAR(length=13), autoincrement=False, nullable=False))
    op.add_column('book', sa.Column('publisher_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('book', sa.Column('tenant_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'book', type_='foreignkey')
    op.create_foreign_key(op.f('book_tenant_id_fkey'), 'book', 'tenant', ['tenant_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('book_publisher_id_fkey'), 'book', 'publisher', ['publisher_id'], ['id'])
    op.drop_index(op.f('ix_book_title'), table_name='book')
    op.create_index(op.f('ix_book_title'), 'book', ['title'], unique=True)
    op.create_index(op.f('ix_book_isbn'), 'book', ['isbn'], unique=True)
    op.create_unique_constraint(op.f('book_tenant_id_key'), 'book', ['tenant_id'], postgresql_nulls_not_distinct=False)
    op.create_unique_constraint(op.f('book_publisher_id_key'), 'book', ['publisher_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('book', 'author',
               existing_type=sqlmodel.sql.sqltypes.AutoString(length=255),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.drop_column('book', 'category_id')
    op.drop_column('book', 'language')
    op.drop_column('book', 'description')
    op.drop_index(op.f('ix_bookedition_updated_at'), table_name='bookedition')
    op.drop_index(op.f('ix_bookedition_isbn_13'), table_name='bookedition')
    op.drop_index(op.f('ix_bookedition_isbn_10'), table_name='bookedition')
    op.drop_index(op.f('ix_bookedition_created_at'), table_name='bookedition')
    op.drop_table('bookedition')
    op.drop_index(op.f('ix_category_name'), table_name='category')
    op.drop_table('category')
    # ### end Alembic commands ###
