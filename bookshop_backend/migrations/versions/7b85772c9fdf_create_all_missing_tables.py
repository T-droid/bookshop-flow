"""create_all_missing_tables

Revision ID: 7b85772c9fdf
Revises: 969d4c5ac625
Create Date: 2025-07-26 13:14:21.401051

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '7b85772c9fdf'
down_revision: Union[str, Sequence[str], None] = '969d4c5ac625'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('role',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_role_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_role_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_role_updated_at'), ['updated_at'], unique=False)

    op.create_table('publisher',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('contact_info', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('publisher', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_publisher_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_publisher_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_publisher_updated_at'), ['updated_at'], unique=False)

    op.create_table('receipttemplates',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('template', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('receipttemplates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_receipttemplates_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_receipttemplates_updated_at'), ['updated_at'], unique=False)

    op.create_table('settings',
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('time_zone', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('email_notifications', sa.Boolean(), nullable=False),
    sa.Column('sms_notification', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tenant_id')
    )
    op.create_table('supplier',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('contact_info', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('supplier', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_supplier_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_supplier_name'), ['name'], unique=True)
        batch_op.create_index(batch_op.f('ix_supplier_updated_at'), ['updated_at'], unique=False)

    op.create_table('taxrates',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('rate', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('taxrates', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_taxrates_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_taxrates_updated_at'), ['updated_at'], unique=False)

    op.create_table('auditlog',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('table_name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('record_id', sa.Uuid(), nullable=False),
    sa.Column('action', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('changed_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('auditlog', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_auditlog_created_at'), ['created_at'], unique=False)

    op.create_table('backupcodes',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('code_hash', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=False),
    sa.Column('used_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code_hash')
    )
    with op.batch_alter_table('backupcodes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_backupcodes_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_backupcodes_used_at'), ['used_at'], unique=False)

    op.create_table('book',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('author', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('isbn', sqlmodel.sql.sqltypes.AutoString(length=13), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('publisher_id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['publisher_id'], ['publisher.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('publisher_id'),
    sa.UniqueConstraint('tenant_id')
    )
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_book_author'), ['author'], unique=False)
        batch_op.create_index(batch_op.f('ix_book_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_book_isbn'), ['isbn'], unique=True)
        batch_op.create_index(batch_op.f('ix_book_title'), ['title'], unique=True)
        batch_op.create_index(batch_op.f('ix_book_updated_at'), ['updated_at'], unique=False)

    op.create_table('otpcode',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('otp', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('otpcode', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_otpcode_created_at'), ['created_at'], unique=False)

    op.create_table('purchaseorder',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('supplier_id', sa.Uuid(), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=False),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('sale_date', sa.DateTime(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('payment_method', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('discount', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenantpublisher',
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('publisher_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['publisher_id'], ['publisher.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tenant_id', 'publisher_id')
    )
    op.create_table('tenantsupplier',
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('supplier_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['supplier_id'], ['supplier.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tenant_id', 'supplier_id')
    )
    op.create_table('userroles',
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('role_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('webauthncredential',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('credential_id', sa.LargeBinary(), nullable=False),
    sa.Column('public_key', sa.LargeBinary(), nullable=False),
    sa.Column('sign_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(), nullable=True),
    sa.Column('transports', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('credential_id')
    )
    with op.batch_alter_table('webauthncredential', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_webauthncredential_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_webauthncredential_last_used_at'), ['last_used_at'], unique=False)

    op.create_table('inventory',
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('book_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('low_stock_threshold', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tenant_id', 'book_id')
    )
    op.create_table('monthlysalessummary',
    sa.Column('tenant_id', sa.Uuid(), nullable=False),
    sa.Column('book_id', sa.Uuid(), nullable=False),
    sa.Column('year_month', sa.DateTime(), nullable=False),
    sa.Column('total_quantity', sa.Integer(), nullable=False),
    sa.Column('total_revenue', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('tenant_id', 'book_id', 'year_month')
    )
    with op.batch_alter_table('monthlysalessummary', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_monthlysalessummary_created_at'), ['created_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_monthlysalessummary_updated_at'), ['updated_at'], unique=False)
        batch_op.create_index(batch_op.f('ix_monthlysalessummary_year_month'), ['year_month'], unique=False)

    op.create_table('purchaseorderitems',
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('book_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['purchaseorder.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('order_id', 'book_id')
    )
    op.create_table('saleitems',
    sa.Column('sale_id', sa.Uuid(), nullable=False),
    sa.Column('book_id', sa.Uuid(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sale_id', 'book_id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)
        # Skip foreign key constraint changes for SQLite compatibility

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Skip foreign key constraint changes for SQLite compatibility
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=False)
        batch_op.drop_index(batch_op.f('ix_user_email'))
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=False)

    op.drop_table('saleitems')
    op.drop_table('purchaseorderitems')
    with op.batch_alter_table('monthlysalessummary', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_monthlysalessummary_year_month'))
        batch_op.drop_index(batch_op.f('ix_monthlysalessummary_updated_at'))
        batch_op.drop_index(batch_op.f('ix_monthlysalessummary_created_at'))

    op.drop_table('monthlysalessummary')
    op.drop_table('inventory')
    with op.batch_alter_table('webauthncredential', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_webauthncredential_last_used_at'))
        batch_op.drop_index(batch_op.f('ix_webauthncredential_created_at'))

    op.drop_table('webauthncredential')
    op.drop_table('userroles')
    op.drop_table('tenantsupplier')
    op.drop_table('tenantpublisher')
    op.drop_table('sales')
    op.drop_table('purchaseorder')
    with op.batch_alter_table('otpcode', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_otpcode_created_at'))

    op.drop_table('otpcode')
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_book_updated_at'))
        batch_op.drop_index(batch_op.f('ix_book_title'))
        batch_op.drop_index(batch_op.f('ix_book_isbn'))
        batch_op.drop_index(batch_op.f('ix_book_created_at'))
        batch_op.drop_index(batch_op.f('ix_book_author'))

    op.drop_table('book')
    with op.batch_alter_table('backupcodes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_backupcodes_used_at'))
        batch_op.drop_index(batch_op.f('ix_backupcodes_created_at'))

    op.drop_table('backupcodes')
    with op.batch_alter_table('auditlog', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_auditlog_created_at'))

    op.drop_table('auditlog')
    with op.batch_alter_table('taxrates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_taxrates_updated_at'))
        batch_op.drop_index(batch_op.f('ix_taxrates_created_at'))

    op.drop_table('taxrates')
    with op.batch_alter_table('supplier', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_supplier_updated_at'))
        batch_op.drop_index(batch_op.f('ix_supplier_name'))
        batch_op.drop_index(batch_op.f('ix_supplier_created_at'))

    op.drop_table('supplier')
    op.drop_table('settings')
    with op.batch_alter_table('receipttemplates', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_receipttemplates_updated_at'))
        batch_op.drop_index(batch_op.f('ix_receipttemplates_created_at'))

    op.drop_table('receipttemplates')
    with op.batch_alter_table('publisher', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_publisher_updated_at'))
        batch_op.drop_index(batch_op.f('ix_publisher_name'))
        batch_op.drop_index(batch_op.f('ix_publisher_created_at'))

    op.drop_table('publisher')
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_role_updated_at'))
        batch_op.drop_index(batch_op.f('ix_role_name'))
        batch_op.drop_index(batch_op.f('ix_role_created_at'))

    op.drop_table('role')
    # ### end Alembic commands ###
