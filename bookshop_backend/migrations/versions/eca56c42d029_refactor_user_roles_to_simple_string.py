"""refactor_user_roles_to_simple_string

Revision ID: eca56c42d029
Revises: 3bcff576612e
Create Date: 2025-08-06 18:28:03.049611

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'eca56c42d029'
down_revision: Union[str, Sequence[str], None] = '3bcff576612e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop tables in the correct order (child table first, then parent)
    op.drop_table('userroles')
    op.drop_index(op.f('ix_role_created_at'), table_name='role')
    op.drop_index(op.f('ix_role_name'), table_name='role')
    op.drop_index(op.f('ix_role_updated_at'), table_name='role')
    op.drop_table('role')
    
    # Add the user_role column with a default value for existing users
    op.add_column('user', sa.Column('user_role', sqlmodel.sql.sqltypes.AutoString(), nullable=False, server_default='manager'))
    
    # Remove the server default after adding the column (future inserts will use the model default)
    op.alter_column('user', 'user_role', server_default=None)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'user_role')
    op.create_table('userroles',
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('role_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], name=op.f('userroles_role_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('userroles_user_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'role_id', name=op.f('userroles_pkey'))
    )
    op.create_table('role',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('role_pkey'))
    )
    op.create_index(op.f('ix_role_updated_at'), 'role', ['updated_at'], unique=False)
    op.create_index(op.f('ix_role_name'), 'role', ['name'], unique=True)
    op.create_index(op.f('ix_role_created_at'), 'role', ['created_at'], unique=False)
    # ### end Alembic commands ###
