"""update_sales_schema_with_editions_and_improved_structure

Revision ID: c22376c884ec
Revises: 5303139b1907
Create Date: 2025-08-13 18:29:47.467126

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c22376c884ec'
down_revision: Union[str, Sequence[str], None] = '5303139b1907'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('monthlysalessummary', sa.Column('year', sa.Integer(), nullable=False))
    op.add_column('monthlysalessummary', sa.Column('month', sa.Integer(), nullable=False))
    op.add_column('monthlysalessummary', sa.Column('edition_id', sa.Uuid(), nullable=False))
    op.add_column('monthlysalessummary', sa.Column('total_sales_count', sa.Integer(), nullable=False))
    op.alter_column('monthlysalessummary', 'total_revenue',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=False)
    op.drop_index(op.f('ix_monthlysalessummary_created_at'), table_name='monthlysalessummary')
    op.drop_index(op.f('ix_monthlysalessummary_year_month'), table_name='monthlysalessummary')
    op.create_index(op.f('ix_monthlysalessummary_month'), 'monthlysalessummary', ['month'], unique=False)
    op.create_index(op.f('ix_monthlysalessummary_year'), 'monthlysalessummary', ['year'], unique=False)
    op.drop_constraint(op.f('monthlysalessummary_tenant_id_fkey'), 'monthlysalessummary', type_='foreignkey')
    op.drop_constraint(op.f('monthlysalessummary_book_id_fkey'), 'monthlysalessummary', type_='foreignkey')
    op.create_foreign_key(None, 'monthlysalessummary', 'bookedition', ['edition_id'], ['edition_id'])
    op.create_foreign_key(None, 'monthlysalessummary', 'tenant', ['tenant_id'], ['id'])
    op.drop_column('monthlysalessummary', 'created_at')
    op.drop_column('monthlysalessummary', 'year_month')
    op.drop_column('monthlysalessummary', 'book_id')
    op.add_column('saleitems', sa.Column('id', sa.Uuid(), nullable=False))
    op.add_column('saleitems', sa.Column('edition_id', sa.Uuid(), nullable=False))
    op.add_column('saleitems', sa.Column('quantity_sold', sa.Integer(), nullable=False))
    op.add_column('saleitems', sa.Column('price_per_unit', sa.Numeric(precision=10, scale=2), nullable=False))
    op.add_column('saleitems', sa.Column('total_price', sa.Numeric(precision=10, scale=2), nullable=False))
    op.add_column('saleitems', sa.Column('tax_amount', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('saleitems', sa.Column('discount_amount', sa.Numeric(precision=10, scale=2), nullable=True))
    op.drop_constraint(op.f('saleitems_sale_id_fkey'), 'saleitems', type_='foreignkey')
    op.drop_constraint(op.f('saleitems_book_id_fkey'), 'saleitems', type_='foreignkey')
    op.create_foreign_key(None, 'saleitems', 'sales', ['sale_id'], ['id'])
    op.create_foreign_key(None, 'saleitems', 'bookedition', ['edition_id'], ['edition_id'])
    op.drop_column('saleitems', 'quantity')
    op.drop_column('saleitems', 'unit_price')
    op.drop_column('saleitems', 'book_id')
    op.add_column('sales', sa.Column('sale_status', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=False))
    op.add_column('sales', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('sales', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('sales', 'total_amount',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=False)
    op.create_index(op.f('ix_sales_created_at'), 'sales', ['created_at'], unique=False)
    op.create_index(op.f('ix_sales_sale_date'), 'sales', ['sale_date'], unique=False)
    op.create_index(op.f('ix_sales_updated_at'), 'sales', ['updated_at'], unique=False)
    op.drop_constraint(op.f('sales_user_id_fkey'), 'sales', type_='foreignkey')
    op.drop_constraint(op.f('sales_tenant_id_fkey'), 'sales', type_='foreignkey')
    op.create_foreign_key(None, 'sales', 'tenant', ['tenant_id'], ['id'])
    op.drop_column('sales', 'user_id')
    op.drop_column('sales', 'discount')
    op.drop_column('sales', 'payment_method')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('sales', sa.Column('payment_method', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('sales', sa.Column('discount', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('sales', sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'sales', type_='foreignkey')
    op.create_foreign_key(op.f('sales_tenant_id_fkey'), 'sales', 'tenant', ['tenant_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('sales_user_id_fkey'), 'sales', 'user', ['user_id'], ['id'])
    op.drop_index(op.f('ix_sales_updated_at'), table_name='sales')
    op.drop_index(op.f('ix_sales_sale_date'), table_name='sales')
    op.drop_index(op.f('ix_sales_created_at'), table_name='sales')
    op.alter_column('sales', 'total_amount',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.drop_column('sales', 'updated_at')
    op.drop_column('sales', 'created_at')
    op.drop_column('sales', 'sale_status')
    op.add_column('saleitems', sa.Column('book_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('saleitems', sa.Column('unit_price', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.add_column('saleitems', sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'saleitems', type_='foreignkey')
    op.drop_constraint(None, 'saleitems', type_='foreignkey')
    op.create_foreign_key(op.f('saleitems_book_id_fkey'), 'saleitems', 'book', ['book_id'], ['id'])
    op.create_foreign_key(op.f('saleitems_sale_id_fkey'), 'saleitems', 'sales', ['sale_id'], ['id'], ondelete='CASCADE')
    op.drop_column('saleitems', 'discount_amount')
    op.drop_column('saleitems', 'tax_amount')
    op.drop_column('saleitems', 'total_price')
    op.drop_column('saleitems', 'price_per_unit')
    op.drop_column('saleitems', 'quantity_sold')
    op.drop_column('saleitems', 'edition_id')
    op.drop_column('saleitems', 'id')
    op.add_column('monthlysalessummary', sa.Column('book_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('monthlysalessummary', sa.Column('year_month', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.add_column('monthlysalessummary', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'monthlysalessummary', type_='foreignkey')
    op.drop_constraint(None, 'monthlysalessummary', type_='foreignkey')
    op.create_foreign_key(op.f('monthlysalessummary_book_id_fkey'), 'monthlysalessummary', 'book', ['book_id'], ['id'])
    op.create_foreign_key(op.f('monthlysalessummary_tenant_id_fkey'), 'monthlysalessummary', 'tenant', ['tenant_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_monthlysalessummary_year'), table_name='monthlysalessummary')
    op.drop_index(op.f('ix_monthlysalessummary_month'), table_name='monthlysalessummary')
    op.create_index(op.f('ix_monthlysalessummary_year_month'), 'monthlysalessummary', ['year_month'], unique=False)
    op.create_index(op.f('ix_monthlysalessummary_created_at'), 'monthlysalessummary', ['created_at'], unique=False)
    op.alter_column('monthlysalessummary', 'total_revenue',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=False)
    op.drop_column('monthlysalessummary', 'total_sales_count')
    op.drop_column('monthlysalessummary', 'edition_id')
    op.drop_column('monthlysalessummary', 'month')
    op.drop_column('monthlysalessummary', 'year')
    # ### end Alembic commands ###
